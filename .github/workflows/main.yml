name: YG Playwright CI 

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        project: [behind-login, public]


    env:
      API_URL: ${{ secrets.API_URL }}
      LOGIN_URL: ${{ secrets.LOGIN_URL }}
      REGISTER_URL: ${{ secrets.REGISTER_URL }}
      GOOGLE_CALENDAR: ${{ secrets.GOOGLE_CALENDAR }}
      MICROSOFT_CALENDAR: ${{ secrets.MICROSOFT_CALENDAR }}
      GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
      GOOGLE_PASSWORD: ${{ secrets.GOOGLE_PASSWORD }}
      EMAIL_LOGIN: ${{ secrets.EMAIL_LOGIN }}
      PASSWORD: ${{ secrets.PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache NPM modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npx playwright test --project=${{ matrix.project }} --reporter=json,html --retries=2 > results.json
        continue-on-error: false

      - name: Zip Playwright HTML report
        run: zip -r playwright-report.zip playwright-report

      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload Playwright trace files
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-traces
          path: test-results/
          retention-days: 30
      - name: Move report to root
        run: mv playwright-report.zip ${{ github.workspace }}

      - name: Parse test summary
        id: summary
        run: |
          passed=$(jq '[.. | .results? // empty | .[] | select(.status=="passed")] | length' results.json)
          failed=$(jq '[.. | .results? // empty | .[] | select(.status=="failed")] | length' results.json)
          skipped=$(jq '[.. | .results? // empty | .[] | select(.status=="skipped")] | length' results.json)

          passed_tests=$(jq -r '[.. | .specs? // empty | .[] | select(any(.tests[].results[]?.status; . == "passed")) | .title] | .[]' results.json)
          failed_tests=$(jq -r '[.. | .specs? // empty | .[] | select(any(.tests[].results[]?.status; . == "failed")) | .title] | .[]' results.json)
          skipped_tests=$(jq -r '[.. | .specs? // empty | .[] | select(any(.tests[].results[]?.status; . == "skipped")) | .title] | .[]' results.json)

          if [ -z "$passed_tests" ]; then passed_tests="None"; fi
          if [ -z "$failed_tests" ]; then failed_tests="None"; fi
          if [ -z "$skipped_tests" ]; then skipped_tests="None"; fi

          {
            echo "PASSED=$passed"
            echo "FAILED=$failed"
            echo "SKIPPED=$skipped"

            echo "PASSED_TESTS<<EOF"
            echo "$passed_tests"
            echo "EOF"

            echo "FAILED_TESTS<<EOF"
            echo "$failed_tests"
            echo "EOF"

            echo "SKIPPED_TESTS<<EOF"
            echo "$skipped_tests"
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Send summary email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GOOGLE_EMAIL }}
          password: ${{ secrets.GOOGLE_PASSWORD }}
          subject: "Test Results for ${{ github.repository }}"
          to: markchristiandurana75@gmail.com
          from: Playwright CI <mcdurana@jlabs.team>
          body: |
            Playwright test run completed for repository **${{ github.event.repository.name }}**.

            Test Results:
            -------------------------------------------------------------------
            ‚úÖ Passed: ${{ env.PASSED }}
            ‚ùå Failed: ${{ env.FAILED }}
            ‚ö†Ô∏è Skipped: ${{ env.SKIPPED }}

            ‚úÖ Passed Tests:
            ${{ env.PASSED_TESTS }}

            ‚ùå Failed Tests:
            ${{ env.FAILED_TESTS }}

            ‚ö†Ô∏è Skipped Tests:
            ${{ env.SKIPPED_TESTS }}
            -------------------------------------------------------------------

            For more details, please see the attached HTML report files.

            üìë Instructions for opening the Playwright HTML report:
            1. Download the attached `playwright-report.zip`.
            2. Extract the ZIP file.
            3. Open `index.html` in your browser.

            üïµÔ∏è Instructions for viewing Playwright trace files:
            1. Download the workflow artifact named **playwright-traces** from this run:
               ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            2. Extract the ZIP file and locate the `test-results` folder.
            3. Open https://trace.playwright.dev and drag a trace file into the viewer.

            Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            attachments: "playwright-report/playwright-report.zip"

