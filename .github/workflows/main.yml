name: Playwright Tests CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [18, 20]
    runs-on: ${{ matrix.os }}

    env:
      API_URL: ${{ secrets.API_URL }}
      LOGIN_URL: ${{ secrets.LOGIN_URL }}
      REGISTER_URL: ${{ secrets.REGISTER_URL }}
      GOOGLE_CALENDAR: ${{ secrets.GOOGLE_CALENDAR }}
      MICROSOFT_CALENDAR: ${{ secrets.MICROSOFT_CALENDAR }}
      GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
      GOOGLE_PASSWORD: ${{ secrets.GOOGLE_PASSWORD }}
      EMAIL_LOGIN: ${{ secrets.EMAIL_LOGIN }}
      PASSWORD: ${{ secrets.PASSWORD }}

    steps:
      - uses: actions/checkout@v4.1.1

      - uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache Node.js modules
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # Run tests with reporters + capture results
      - name: Run Playwright tests
        run: npx playwright test --reporter=line,json --output=test-results
        continue-on-error: true

      # Upload artifacts always (reports + traces)
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: playwright-report-${{ matrix.os }}-node${{ matrix.node }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Playwright traces
        if: always()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: playwright-traces-${{ matrix.os }}-node${{ matrix.node }}
          path: test-results/
          retention-days: 14

      - name: Parse test summary
        id: summary
        run: |
          results_file="results.json"
          if [ ! -f "$results_file" ]; then
            echo "{}" > $results_file
          fi

          passed=$(jq '[.. | .results? // empty | .[] | select(.status=="passed")] | length' $results_file)
          failed=$(jq '[.. | .results? // empty | .[] | select(.status=="failed")] | length' $results_file)
          skipped=$(jq '[.. | .results? // empty | .[] | select(.status=="skipped")] | length' $results_file)

          passed_tests=$(jq -r '
            [.. | .specs? // empty | .[] 
              | select(any(.tests[].results[]?.status; . == "passed")) 
              | .title] | .[]? // empty
          ' $results_file)

          failed_tests=$(jq -r '
            [.. | .specs? // empty | .[] 
              | select(any(.tests[].results[]?.status; . == "failed")) 
              | .title] | .[]? // empty
          ' $results_file)

          skipped_tests=$(jq -r '
            [.. | .specs? // empty | .[] 
              | select(any(.tests[].results[]?.status; . == "skipped")) 
              | .title] | .[]? // empty
          ' $results_file)

          if [ -z "$passed_tests" ]; then passed_tests="None"; fi
          if [ -z "$failed_tests" ]; then failed_tests="None"; fi
          if [ -z "$skipped_tests" ]; then skipped_tests="None"; fi

          echo "PASSED=$passed" >> $GITHUB_ENV
          echo "FAILED=$failed" >> $GITHUB_ENV
          echo "SKIPPED=$skipped" >> $GITHUB_ENV

          {
          echo "PASSED_TESTS<<EOF"
          echo "$passed_tests"
          echo "EOF"

          echo "FAILED_TESTS<<EOF"
          echo "$failed_tests"
          echo "EOF"

          echo "SKIPPED_TESTS<<EOF"
          echo "$skipped_tests"
          echo "EOF"
          } >> $GITHUB_ENV

      - name: Annotate failed tests
        if: always()
        run: |
          while read -r test; do
            echo "::error title=Playwright Test Failed::$test"
          done <<< "${{ env.FAILED_TESTS }}"

      - name: Zip Playwright HTML report
        if: always()
        run: zip -r playwright-report.zip playwright-report

      - name: Send summary email
        if: always()
        uses: dawidd6/action-send-mail@v3.12.0
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GOOGLE_EMAIL }}
          password: ${{ secrets.GOOGLE_PASSWORD }}
          subject: "Test Results for ${{ github.repository }} [${{ matrix.os }} - Node ${{ matrix.node }}]"
          to: markchristiandurana75@gmail.com, roleynes@jlabs.team
          from: Playwright CI <mcdurana@jlabs.team>
          body: |
            Playwright test run completed for repository **${{ github.event.repository.name }}**.

            ✅ Passed: ${{ env.PASSED }}
            ❌ Failed: ${{ env.FAILED }}
            ⚠️ Skipped: ${{ env.SKIPPED }}

            ✅ Passed Tests:
            ${{ env.PASSED_TESTS }}

            ❌ Failed Tests:
            ${{ env.FAILED_TESTS }}

            ⚠️ Skipped Tests:
            ${{ env.SKIPPED_TESTS }}

            ------------------------------------------------------
            Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          attachments: "playwright-report.zip"
