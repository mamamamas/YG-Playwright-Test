name: YG Playwright CI 

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    env:
      API_URL: ${{ secrets.API_URL }}
      LOGIN_URL: ${{ secrets.LOGIN_URL }}
      REGISTER_URL: ${{ secrets.REGISTER_URL }}
      GOOGLE_CALENDAR: ${{ secrets.GOOGLE_CALENDAR }}
      MICROSOFT_CALENDAR: ${{ secrets.MICROSOFT_CALENDAR }}
      GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
      GOOGLE_PASSWORD: ${{ secrets.GOOGLE_PASSWORD }}
      EMAIL_LOGIN: ${{ secrets.EMAIL_LOGIN }}
      PASSWORD: ${{ secrets.PASSWORD }}

    strategy:
      fail-fast: false
      matrix:
        suite: [behind-login, public]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache NPM modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npx playwright test tests/${{ matrix.suite }} \
            --reporter=list,json,json-summary \
            --output=results
        continue-on-error: true

      - name: Save suite summary
        run: |
          mkdir -p summaries
          echo "## Suite: ${{ matrix.suite }}" > summaries/suite-summary.txt
          if [ -f results/test-summary.json ]; then
            passed=$(jq '.stats.expected' results/test-summary.json)
            failed=$(jq '.stats.unexpected' results/test-summary.json)
            echo "✅ Passed: $passed" >> summaries/suite-summary.txt
            echo "❌ Failed: $failed" >> summaries/suite-summary.txt
          else
            echo "⚠️ No summary file found" >> summaries/suite-summary.txt
          fi
        shell: bash

      - name: Upload suite summary
        uses: actions/upload-artifact@v4
        with:
          name: summary-${{ matrix.suite }}
          path: summaries/suite-summary.txt

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-${{ matrix.suite }}
          path: playwright-report/
          retention-days: 30

      - name: Upload trace files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-trace-${{ matrix.suite }}
          path: test-results/
          retention-days: 30

  notify:
    needs: test   # ✅ wait for all matrix jobs to finish
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: reports

      - name: Combine summaries
        run: |
          echo "## 📝 Playwright Test Results" > full-summary.txt
          total_passed=0
          total_failed=0

          for f in reports/**/suite-summary.txt; do
            cat "$f" >> full-summary.txt
            echo "" >> full-summary.txt

            passed=$(grep '✅ Passed:' "$f" | awk '{print $3}')
            failed=$(grep '❌ Failed:' "$f" | awk '{print $3}')
            total_passed=$((total_passed + passed))
            total_failed=$((total_failed + failed))
          done

          echo "### 📊 Total Results" >> full-summary.txt
          echo "✅ Passed: $total_passed" >> full-summary.txt
          echo "❌ Failed: $total_failed" >> full-summary.txt
        shell: bash

      - name: Zip reports
        run: |
          cd reports
          zip -r ../playwright.zip .
        shell: bash

      - name: Send summary email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GOOGLE_EMAIL }}
          password: ${{ secrets.GOOGLE_PASSWORD }}
          subject: "Test Results for ${{ github.repository }}"
          to: markchristiandurana75@gmail.com
          from: Playwright CI <mcdurana@jlabs.team>
          body: |
            Playwright test run completed for repository **${{ github.event.repository.name }}**.

            📎 Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------------------------------------------
            $(cat full-summary.txt)
            ------------------------------------------

            💡 To view the Playwright HTML report:
            1. Download the attached `playwright.zip`.
            2. Extract it and open `index.html` in a browser.

            🧪 To inspect Playwright traces:
            1. Download trace artifacts from:
               ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            2. Open https://trace.playwright.dev and drag & drop trace zip files.
          attachments: "playwright.zip"
